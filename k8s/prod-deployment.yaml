apiVersion: apps/v1
kind: Deployment
metadata:
  name: parkcharge-smart-rewards-prod
  namespace: production
  labels:
    app: parkcharge-smart-rewards
    environment: production
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: parkcharge-smart-rewards
      environment: production
  template:
    metadata:
      labels:
        app: parkcharge-smart-rewards
        environment: production
        version: v1.0.0
    spec:
      containers:
      - name: parkcharge-smart-rewards
        image: your-registry.com/parkcharge-smart-rewards:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: parkcharge-smart-rewards-prod-service
  namespace: production
  labels:
    app: parkcharge-smart-rewards
    environment: production
spec:
  selector:
    app: parkcharge-smart-rewards
    environment: production
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: parkcharge-smart-rewards-prod-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - parkcharge.com
    - www.parkcharge.com
    secretName: parkcharge-prod-tls
  rules:
  - host: parkcharge.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: parkcharge-smart-rewards-prod-service
            port:
              number: 80
  - host: www.parkcharge.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: parkcharge-smart-rewards-prod-service
            port:
              number: 80
